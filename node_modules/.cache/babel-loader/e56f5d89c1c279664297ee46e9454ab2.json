{"ast":null,"code":"/* Start Prime Number */\nfunction isPrime(number) {\n  if (number < 2) {\n    return false;\n  }\n\n  for (let i = 2; i < number; i += 1) {\n    if (number % i === 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function firstNPrimes(n) {\n  const primes = [];\n  let num = 2;\n\n  while (primes.length < n) {\n    if (isPrime(num)) {\n      primes.push(num);\n    }\n\n    num += 1;\n  }\n\n  return primes;\n}\n/* End Prime Number */\n\n/* Start Fibonacci */\n\nexport function fib(length) {\n  var fibArr = [],\n      i = 0,\n      j = 1;\n  fibArr.push(i);\n  fibArr.push(j);\n\n  while (fibArr.length <= length) {\n    fibArr.push(fibArr[j] + fibArr[i]);\n    j++;\n    i++;\n  }\n\n  return fibArr;\n}\n;\n/* End Fibonacci */","map":{"version":3,"sources":["/Users/gredu/Documents/reactjs-simple-calculator/src/utils/helper.js"],"names":["isPrime","number","i","firstNPrimes","n","primes","num","length","push","fib","fibArr","j"],"mappings":"AAAA;AACA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACrB,MAAIA,MAAM,GAAG,CAAb,EAAgB;AACZ,WAAO,KAAP;AACH;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,IAAI,CAAjC,EAAoC;AAChC,QAAID,MAAM,GAAGC,CAAT,KAAe,CAAnB,EAAsB;AAClB,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH;;AAED,OAAO,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AAC5B,QAAMC,MAAM,GAAG,EAAf;AACA,MAAIC,GAAG,GAAG,CAAV;;AAEA,SAAOD,MAAM,CAACE,MAAP,GAAgBH,CAAvB,EAA0B;AACtB,QAAIJ,OAAO,CAACM,GAAD,CAAX,EAAkB;AACdD,MAAAA,MAAM,CAACG,IAAP,CAAYF,GAAZ;AACH;;AAEDA,IAAAA,GAAG,IAAI,CAAP;AACH;;AAED,SAAOD,MAAP;AACH;AACD;;AAGA;;AACA,OAAO,SAASI,GAAT,CAAaF,MAAb,EAAqB;AACxB,MAAIG,MAAM,GAAG,EAAb;AAAA,MACER,CAAC,GAAG,CADN;AAAA,MAEES,CAAC,GAAG,CAFN;AAGAD,EAAAA,MAAM,CAACF,IAAP,CAAYN,CAAZ;AACAQ,EAAAA,MAAM,CAACF,IAAP,CAAYG,CAAZ;;AACA,SAAOD,MAAM,CAACH,MAAP,IAAiBA,MAAxB,EAAgC;AAC9BG,IAAAA,MAAM,CAACF,IAAP,CAAYE,MAAM,CAACC,CAAD,CAAN,GAAYD,MAAM,CAACR,CAAD,CAA9B;AACAS,IAAAA,CAAC;AACDT,IAAAA,CAAC;AACF;;AACD,SAAOQ,MAAP;AACD;AAAA;AACH","sourcesContent":["/* Start Prime Number */\nfunction isPrime(number) {\n    if (number < 2) {\n        return false;\n    }\n\n    for (let i = 2; i < number; i += 1) {\n        if (number % i === 0) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function firstNPrimes(n) {\n    const primes = [];\n    let num = 2;\n\n    while (primes.length < n) {\n        if (isPrime(num)) {\n            primes.push(num);\n        }\n\n        num += 1;\n    }\n\n    return primes;\n}\n/* End Prime Number */\n\n\n/* Start Fibonacci */\nexport function fib(length) {\n    var fibArr = [],\n      i = 0,\n      j = 1;\n    fibArr.push(i);\n    fibArr.push(j);\n    while (fibArr.length <= length) {\n      fibArr.push(fibArr[j] + fibArr[i]);\n      j++;\n      i++;\n    }\n    return fibArr;\n  };\n/* End Fibonacci */"]},"metadata":{},"sourceType":"module"}