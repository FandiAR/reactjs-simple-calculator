{"ast":null,"code":"/* Start Prime Number */\nfunction isPrime(number) {\n  if (number < 2) {\n    return false;\n  }\n\n  for (let i = 2; i < number; i += 1) {\n    if (number % i === 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function firstNPrimes(n) {\n  const primes = [];\n  let num = 2;\n\n  while (primes.length < n) {\n    if (isPrime(num)) {\n      primes.push(num);\n    }\n\n    num += 1;\n  }\n\n  return primes;\n}\n/* End Prime Number */\n\n/* Start Fibonacci */\n\nexport function firstFibonacci(number) {\n  let x = 0,\n      i = 0,\n      j = 1,\n      k = 0;\n  let fibArray = [0, 1];\n\n  for (k < number; i = j, j = x, k++;) {\n    x = i + j;\n    fibArray.push(x);\n  }\n\n  return fibArray;\n}\nconsole.log(firstFibonacci(6)); // fib = function(numMax){\n//     for(var fibArray = [0,1], i=0,j=1,k=0; k<numMax;i=j,j=x,k++ ){\n//         x=i+j;\n//         fibArray.push(x);\n//     }\n//     console.log(fibArray);\n// }\n// var fibonacci_series = function (n) \n// {\n//   if (n===1) \n//   {\n//     return [0, 1];\n//   } \n//   else \n//   {\n//     var s = fibonacci_series(n - 1);\n//     s.push(s[s.length - 1] + s[s.length - 2]);\n//     return s;\n//   }\n// };\n//  console.log(fibonacci_series(3));\n// export function firstFibonacci(n) {\n//     if (n===1) {\n//         return [0,1];\n//     } else {\n//         let s = firstFibonacci(n-1);\n//         s.push(s[s.length-1]+s[s.length-2]);\n//         return s;\n//     }\n// }\n// console.log(firstFibonacci(5));\n\n/* End Fibonacci */","map":{"version":3,"sources":["/Users/gredu/Documents/reactjs-simple-calculator/src/utils/helper.js"],"names":["isPrime","number","i","firstNPrimes","n","primes","num","length","push","firstFibonacci","x","j","k","fibArray","console","log"],"mappings":"AAAA;AACA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACrB,MAAIA,MAAM,GAAG,CAAb,EAAgB;AACZ,WAAO,KAAP;AACH;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,IAAI,CAAjC,EAAoC;AAChC,QAAID,MAAM,GAAGC,CAAT,KAAe,CAAnB,EAAsB;AAClB,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH;;AAED,OAAO,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AAC5B,QAAMC,MAAM,GAAG,EAAf;AACA,MAAIC,GAAG,GAAG,CAAV;;AAEA,SAAOD,MAAM,CAACE,MAAP,GAAgBH,CAAvB,EAA0B;AACtB,QAAIJ,OAAO,CAACM,GAAD,CAAX,EAAkB;AACdD,MAAAA,MAAM,CAACG,IAAP,CAAYF,GAAZ;AACH;;AAEDA,IAAAA,GAAG,IAAI,CAAP;AACH;;AAED,SAAOD,MAAP;AACH;AACD;;AAGA;;AACA,OAAO,SAASI,cAAT,CAAwBR,MAAxB,EAAgC;AACnC,MAAIS,CAAC,GAAG,CAAR;AAAA,MAAWR,CAAC,GAAC,CAAb;AAAA,MAAgBS,CAAC,GAAC,CAAlB;AAAA,MAAqBC,CAAC,GAAC,CAAvB;AACA,MAAIC,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,CAAf;;AACA,OAAKD,CAAC,GAAGX,MAAT,EAAiBC,CAAC,GAAGS,CAAJ,EAAOA,CAAC,GAAGD,CAAX,EAAcE,CAAC,EAAhC,GAAqC;AACjCF,IAAAA,CAAC,GAAGR,CAAC,GAAGS,CAAR;AACAE,IAAAA,QAAQ,CAACL,IAAT,CAAcE,CAAd;AACH;;AACD,SAAOG,QAAP;AACH;AACDC,OAAO,CAACC,GAAR,CAAYN,cAAc,CAAC,CAAD,CAA1B,E,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/* Start Prime Number */\nfunction isPrime(number) {\n    if (number < 2) {\n        return false;\n    }\n\n    for (let i = 2; i < number; i += 1) {\n        if (number % i === 0) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function firstNPrimes(n) {\n    const primes = [];\n    let num = 2;\n\n    while (primes.length < n) {\n        if (isPrime(num)) {\n            primes.push(num);\n        }\n\n        num += 1;\n    }\n\n    return primes;\n}\n/* End Prime Number */\n\n\n/* Start Fibonacci */\nexport function firstFibonacci(number) {\n    let x = 0, i=0, j=1, k=0;\n    let fibArray = [0,1];\n    for (k < number; i = j, j = x, k++;) {\n        x = i + j;\n        fibArray.push(x);\n    }\n    return fibArray;\n}\nconsole.log(firstFibonacci(6));\n// fib = function(numMax){\n//     for(var fibArray = [0,1], i=0,j=1,k=0; k<numMax;i=j,j=x,k++ ){\n//         x=i+j;\n//         fibArray.push(x);\n//     }\n//     console.log(fibArray);\n// }\n// var fibonacci_series = function (n) \n// {\n//   if (n===1) \n//   {\n//     return [0, 1];\n//   } \n//   else \n//   {\n//     var s = fibonacci_series(n - 1);\n//     s.push(s[s.length - 1] + s[s.length - 2]);\n//     return s;\n//   }\n// };\n\n//  console.log(fibonacci_series(3));\n\n// export function firstFibonacci(n) {\n//     if (n===1) {\n//         return [0,1];\n//     } else {\n//         let s = firstFibonacci(n-1);\n//         s.push(s[s.length-1]+s[s.length-2]);\n//         return s;\n//     }\n// }\n// console.log(firstFibonacci(5));\n/* End Fibonacci */"]},"metadata":{},"sourceType":"module"}