{"ast":null,"code":"/* Start Prime Number */\nfunction isPrime(number) {\n  if (number < 2) {\n    return false;\n  }\n\n  for (var i = 2; i < number; i += 1) {\n    if (number % i === 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function firstNPrimes(n) {\n  var primes = [];\n  var num = 2;\n\n  while (primes.length < n) {\n    if (isPrime(num)) {\n      primes.push(num);\n    }\n\n    num += 1;\n  }\n\n  return primes;\n}\n/* End Prime Number */\n\n/* Start Fibonacci */\n\nvar fibonacci_series = function (n) {\n  if (n === 1) {\n    return [0, 1];\n  } else {\n    var s = fibonacci_series(n - 1);\n    s.push(s[s.length - 1] + s[s.length - 2]);\n    return s;\n  }\n};\n\nconsole.log(fibonacci_series(4));\n/* End Fibonacci */","map":{"version":3,"sources":["/Users/gredu/Documents/reactjs-simple-calculator/src/utils/helper.js"],"names":["isPrime","number","i","firstNPrimes","n","primes","num","length","push","fibonacci_series","s","console","log"],"mappings":"AAAA;AACA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACrB,MAAIA,MAAM,GAAG,CAAb,EAAgB;AACZ,WAAO,KAAP;AACH;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,IAAI,CAAjC,EAAoC;AAChC,QAAID,MAAM,GAAGC,CAAT,KAAe,CAAnB,EAAsB;AAClB,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH;;AAED,OAAO,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AAC5B,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,GAAG,GAAG,CAAV;;AAEA,SAAOD,MAAM,CAACE,MAAP,GAAgBH,CAAvB,EAA0B;AACtB,QAAIJ,OAAO,CAACM,GAAD,CAAX,EAAkB;AACdD,MAAAA,MAAM,CAACG,IAAP,CAAYF,GAAZ;AACH;;AAEDA,IAAAA,GAAG,IAAI,CAAP;AACH;;AAED,SAAOD,MAAP;AACH;AACD;;AAGA;;AACA,IAAII,gBAAgB,GAAG,UAAUL,CAAV,EACvB;AACE,MAAIA,CAAC,KAAG,CAAR,EACA;AACE,WAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD,GAHD,MAKA;AACE,QAAIM,CAAC,GAAGD,gBAAgB,CAACL,CAAC,GAAG,CAAL,CAAxB;AACAM,IAAAA,CAAC,CAACF,IAAF,CAAOE,CAAC,CAACA,CAAC,CAACH,MAAF,GAAW,CAAZ,CAAD,GAAkBG,CAAC,CAACA,CAAC,CAACH,MAAF,GAAW,CAAZ,CAA1B;AACA,WAAOG,CAAP;AACD;AACF,CAZD;;AAcCC,OAAO,CAACC,GAAR,CAAYH,gBAAgB,CAAC,CAAD,CAA5B;AACD","sourcesContent":["/* Start Prime Number */\nfunction isPrime(number) {\n    if (number < 2) {\n        return false;\n    }\n\n    for (var i = 2; i < number; i += 1) {\n        if (number % i === 0) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function firstNPrimes(n) {\n    var primes = [];\n    var num = 2;\n\n    while (primes.length < n) {\n        if (isPrime(num)) {\n            primes.push(num);\n        }\n\n        num += 1;\n    }\n\n    return primes;\n}\n/* End Prime Number */\n\n\n/* Start Fibonacci */\nvar fibonacci_series = function (n) \n{\n  if (n===1) \n  {\n    return [0, 1];\n  } \n  else \n  {\n    var s = fibonacci_series(n - 1);\n    s.push(s[s.length - 1] + s[s.length - 2]);\n    return s;\n  }\n};\n\n console.log(fibonacci_series(4));\n/* End Fibonacci */"]},"metadata":{},"sourceType":"module"}